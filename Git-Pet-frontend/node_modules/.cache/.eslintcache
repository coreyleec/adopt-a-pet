[{"/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/index.js":"1","/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/App.js":"2","/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/reportWebVitals.js":"3","/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/Component/UserLogin.js":"4","/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/Component/UserHomePage.js":"5","/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/Component/BreederHomePage.js":"6","/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/Component/Navbar.js":"7","/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/Component/UpdateBreederProfileForm.js":"8","/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/Containers/BreederProfile.js":"9","/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/Containers/AllDogsContainer.js":"10","/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/Component/AllDogsCard.js":"11","/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/others/BreederLogin.js":"12","/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/others/Signup.js":"13","/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/others/Login.js":"14","/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/Component/CreateDogForm.js":"15","/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/Component/SavedDogsCard.js":"16","/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/Containers/RequestContainer.js":"17"},{"size":500,"mtime":1624396020719,"results":"18","hashOfConfig":"19"},{"size":3915,"mtime":1624641232806,"results":"20","hashOfConfig":"19"},{"size":362,"mtime":1624396020720,"results":"21","hashOfConfig":"19"},{"size":11039,"mtime":1624639084649,"results":"22","hashOfConfig":"19"},{"size":1242,"mtime":1624639264844,"results":"23","hashOfConfig":"19"},{"size":1018,"mtime":1624639696788,"results":"24","hashOfConfig":"19"},{"size":2068,"mtime":1624642131591,"results":"25","hashOfConfig":"19"},{"size":3622,"mtime":1624641469079,"results":"26","hashOfConfig":"19"},{"size":467,"mtime":1624641255334,"results":"27","hashOfConfig":"19"},{"size":587,"mtime":1624585138614,"results":"28","hashOfConfig":"19"},{"size":720,"mtime":1624563630469,"results":"29","hashOfConfig":"19"},{"size":1213,"mtime":1624502458460,"results":"30","hashOfConfig":"19"},{"size":1344,"mtime":1624502467298,"results":"31","hashOfConfig":"19"},{"size":702,"mtime":1624502483378,"results":"32","hashOfConfig":"19"},{"size":3098,"mtime":1624633711233,"results":"33","hashOfConfig":"19"},{"size":1077,"mtime":1624629701326,"results":"34","hashOfConfig":"19"},{"size":746,"mtime":1624640418665,"results":"35","hashOfConfig":"19"},{"filePath":"36","messages":"37","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"7kapzv",{"filePath":"39","messages":"40","errorCount":0,"warningCount":3,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"41","messages":"42","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"43","messages":"44","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":"45","usedDeprecatedRules":"38"},{"filePath":"46","messages":"47","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"48","messages":"49","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"50","messages":"51","errorCount":0,"warningCount":4,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"52","messages":"53","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":null},{"filePath":"54","messages":"55","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0},{"filePath":"56","messages":"57","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"58","messages":"59","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"60","usedDeprecatedRules":"38"},{"filePath":"61","messages":"62","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"63","messages":"64","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},{"filePath":"65","messages":"66","errorCount":0,"warningCount":2,"fixableErrorCount":0,"fixableWarningCount":0,"source":"67","usedDeprecatedRules":"38"},{"filePath":"68","messages":"69","errorCount":0,"warningCount":5,"fixableErrorCount":0,"fixableWarningCount":0,"source":"70","usedDeprecatedRules":"38"},{"filePath":"71","messages":"72","errorCount":0,"warningCount":1,"fixableErrorCount":0,"fixableWarningCount":0,"source":"73","usedDeprecatedRules":"38"},{"filePath":"74","messages":"75","errorCount":0,"warningCount":0,"fixableErrorCount":0,"fixableWarningCount":0,"usedDeprecatedRules":"38"},"/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/index.js",[],["76","77"],"/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/App.js",["78","79","80"],"/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/reportWebVitals.js",[],"/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/Component/UserLogin.js",["81","82","83","84"],"import React, { Component } from \"react\";\n\nexport default class UserLogin extends Component {\n    state = {\n        userName: \"\",\n        userPassword: \"\",\n        sellerName: \"\",\n        sellerPassword: \"\",\n        userClickedSignup: false,\n        sellerClickedSignup: false,\n        signupName: \"\",\n        signupPassword: \"\",\n        signupAddress: \"\",\n        signupPhone: \"\", \n        signupEmail: \"\"\n    }\n\n    \n\n    handleUserLogin = (e) => {\n        e.preventDefault()\n        console.log(e.target[0].value)\n        console.log(e.target[1].value)\n        fetch(\"http://localhost:3000/userlogin\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                name: e.target[0].value,\n                password: e.target[1].value\n            })\n        })\n        .then(res => res.json())\n        .then(user => {\n            console.log(\"first\", user)\n            console.log(\"second\", user.user)\n            localStorage.token = user.token\n            if(localStorage.token != \"undefined\") {\n                // this.props.history.push(`/userhomepage/${user.id}`)\n                    let userinfo = user.user \n\n                    this.props.handleCurrentLogin(userinfo)\n                    this.props.history.push(\"/userhomepage/\")\n\n            }else {\n                alert(\"try one more time\")\n            }\n        })\n\n        // this.props.history.push(\"/userhomepage\")\n    }\n\n    handleSellerLogin = (e) => {\n        e.preventDefault()\n        fetch(\"http://localhost:3000/sellerlogin\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify({\n                name: e.target[0].value,\n                password: e.target[1].value\n            })\n        })\n        .then(res => res.json())\n        .then(seller => {\n            localStorage.token = seller.token\n            if(localStorage.token != \"undefined\") {\n                console.log(\"seller:\",seller)\n                let sellerInfo = seller.seller \n                this.props.handleCurrentLogin(sellerInfo)\n             this.props.history.push(\"/breederhomepage\")\n            }else {\n                alert(\"try one more time\")\n            }\n        })\n    }\n\n    handleUserSignUp = (e) => {\n        e.preventDefault()\n        let newUser = {\n            // [e.target.name]: e.target.value,\n            name: e.target[0].value,\n            password: e.target[1].value,\n            address: e.target[2].value,\n            phone:e.target[3].value,\n            email:e.target[4].value,\n        }\n\n        fetch(\"http://localhost:3000/usersignup\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newUser)\n        })\n        .then(res => res.json())\n        .then(user => {\n            localStorage.token = user.token\n            if(localStorage.token != \"undefined\") {\n             this.props.history.push(\"/userhomepage\")\n            }else {\n                alert(\"try one more time\")\n            }\n        })\n    }\n\n    handleSellerSignUp = (e) => {\n        e.preventDefault()\n        let seller = {\n            // [e.target.name]: e.target.value,\n            name: e.target[0].value,\n            password: e.target[1].value,\n            address: e.target[2].value,\n            phone:e.target[3].value,\n            email:e.target[4].value,\n        }\n\n        fetch(\"http://localhost:3000/sellersignup\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(seller)\n        })\n        .then(res => res.json())\n        .then(seller => {\n            localStorage.token = seller.token\n            if(localStorage.token != \"undefined\") {\n             this.props.history.push(\"/breederhomepage\")\n            }else {\n                alert(\"try one more time\")\n            }\n        })\n    }\n\n    handleRegister = () => {\n        this.props.history.push(\"/signup\")\n    }\n\n    toggleUserSignup = () => {\n        this.setState({\n            userClickedSignup: !this.state.userClickedSignup\n        })\n    }\n    toggleSellerSignup = () => {\n        this.setState({\n            sellerClickedSignup: !this.state.sellerClickedSignup\n        })\n    }\n\n\n    render() {\n        return (\n            <div>\n                \n                \n                \n\n                {/* <Navbar parentName={document.title} /> */}\n\n            <div class=\"float-container\">\n                \n{/* USER */}\n                <div class=\"float-child\">\n               {this.state.userClickedSignup \n                ?<div>\n                    <h3> please enter info  </h3>\n\n                    <form onSubmit={(e) => this.handleUserSignUp(e)}>\n                        <input type=\"text\" name=\"username\" value={this.state.signupName}\n                        placeholder=\"Enter your Username\"\n                        onChange={(e) => this.setState({\n                            signupName: e.target.value\n                        }) }\n                        />\n                        <br/>\n                        <input \n                        type=\"password\" name=\"password\" value={this.state.signupPassword}\n                        placeholder=\"Enter your Passwords\"\n                        onChange={(e) => this.setState({\n                            signupPassword: e.target.value\n                        })}/>\n                        <br/>\n                        <input \n                        type=\"text\" name=\"address\" value={this.state.signupAddress}\n                        placeholder=\"Enter your Address\"\n                        onChange={(e) => this.setState({\n                            signupAddress: e.target.value\n                        })}/>\n                        <br/>\n                        <input \n                        type=\"text\" name=\"phone\" value={this.state.signupPhone}\n                        placeholder=\"Enter your Phone\"\n                        onChange={(e) => this.setState({\n                            signupPhone: e.target.value\n                        })}/>\n                        <br/>\n                        <input \n                        type=\"text\" name=\"email\" value={this.state.signupEmail}\n                        placeholder=\"Enter your Email\"\n                        onChange={(e) => this.setState({\n                            signupEmail: e.target.value\n                        })}/>\n                        <br/>\n                        <button>Submit </button>\n                    </form>\n                </div>\n                    \n                :<div>\n                    <h1>User sign-in</h1>\n                    <form onSubmit={ (e) => this.handleUserLogin(e) }>\n                        <input \n                        type=\"text\" name=\"username\"\n                        value={this.state.userName}\n                        placeholder=\"Enter your username\"\n                        onChange={(e) => this.setState({\n                            userName: e.target.value\n                        })}/>\n                    <br/>\n                        <input \n                        type=\"password\" name=\"password\"\n                        value={this.state.userPassword}\n                        placeholder=\"Enter your passwords\"\n                        onChange={(e) => this.setState({\n                            userPassword: e.target.value\n                        })}/>\n                    <br/>\n                    <button> Login </button>\n                </form>\n                <button onClick={() => this.toggleUserSignup()}>Signup</button>\n                    </div>}\n                    </div>\n\n{/* SELLER */}  \n<div class=\"float-child\">\n               {this.state.sellerClickedSignup \n                ?<div>\n                    <h3> please enter info  </h3>\n                    <form onSubmit={(e) => this.handleSellerSignUp(e)}>\n                        <input type=\"text\" name=\"username\" value={this.state.signupName}\n                        placeholder=\"Enter your Username\"\n                        onChange={(e) => this.setState({\n                            signupName: e.target.value\n                        }) }\n                        />\n                        <br/>\n                        <input \n                        type=\"password\" name=\"password\" value={this.state.signupPassword}\n                        placeholder=\"Enter your Passwords\"\n                        onChange={(e) => this.setState({\n                            signupPassword: e.target.value\n                        })}/>\n                        <br/>\n                        <input \n                        type=\"text\" name=\"address\" value={this.state.signupAddress}\n                        placeholder=\"Enter your Address\"\n                        onChange={(e) => this.setState({\n                            signupAddress: e.target.value\n                        })}/>\n                        <br/>\n                        <input \n                        type=\"text\" name=\"phone\" value={this.state.signupPhone}\n                        placeholder=\"Enter your Phone\"\n                        onChange={(e) => this.setState({\n                            signupPhone: e.target.value\n                        })}/>\n                        <br/>\n                        <input \n                        type=\"text\" name=\"email\" value={this.state.signupEmail}\n                        placeholder=\"Enter your Email\"\n                        onChange={(e) => this.setState({\n                            signupEmail: e.target.value\n                        })}/>\n                        <br/>\n                        <button>Submit </button>\n                    </form>\n                </div>\n                    \n                :<div>\n                    <h1>Seller sign-in</h1>\n                    <form onSubmit={ (e) => this.handleSellerLogin(e) }>\n                        <input \n                        type=\"text\" name=\"username\"\n                        value={this.state.sellerName}\n                        placeholder=\"Enter your username\"\n                        onChange={(e) => this.setState({\n                            sellerName: e.target.value\n                        })}/>\n                    <br/>\n                        <input \n                        type=\"password\" name=\"password\"\n                        value={this.state.sellerPassword}\n                        placeholder=\"Enter your passwords\"\n                        onChange={(e) => this.setState({\n                            sellerPassword: e.target.value\n                        })}/>\n                    <br/>\n                    <button> Login </button>\n                </form>\n                <button onClick={() => this.toggleSellerSignup()}>Signup</button>\n                    </div>}\n                    </div>\n            </div>\n\n\n\n\n            </div>\n        )\n    }\n}","/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/Component/UserHomePage.js",[],"/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/Component/BreederHomePage.js",[],"/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/Component/Navbar.js",["85","86","87","88"],"/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/Component/UpdateBreederProfileForm.js",["89"],"/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/Containers/BreederProfile.js",[],"/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/Containers/AllDogsContainer.js",[],"/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/Component/AllDogsCard.js",["90"],"import React, { PureComponent } from 'react'\n\nclass AllDogsCard extends PureComponent {\n    \n    state = {\n        \n    }\n\n    render() {\n        let dog = this.props.dog\n        console.log(dog)\n        return (\n               <div className={\"dogCard\"} >\n               <h1>{dog.name}</h1>\n                <img>{dog.image}</img>\n                <p>{dog.breed}</p>\n                <p>{dog.age} years old</p>\n                <p>{dog.gender}</p>\n                <p>{dog.size} </p>\n                <p>seller id: {dog.seller_id}</p>\n                <button onClick={()=> this.props.saveDog(dog)}>save dog</button>\n                {/* <p>dog card</p>  */}\n                </div>\n        )\n    }\n}\n\nexport default AllDogsCard","/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/others/BreederLogin.js",[],"/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/others/Signup.js",[],"/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/others/Login.js",["91","92"],"import React, { Component } from \"react\";\nimport UserLogin from \"../Component/UserLogin\";\nimport BreederLogin from \"./BreederLogin\";\n\nexport default class Login extends Component {\n\n    handleUserLoginClick = () => {\n        this.props.history.push(\"/userlogin\")\n\n    }\n\n    handleBreederLoginClick = () => {\n        this.props.history.push(\"/breederlogin\")\n    }\n\n\n\n    render() {\n        return (\n            <div>\n                <div onClick={() => this.handleUserLoginClick()}>\n                    User Login\n                </div>\n\n                <div onClick={() => this.handleBreederLoginClick()}> \n                    Breeder login \n                </div>\n            </div>\n        )\n    }\n}","/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/Component/CreateDogForm.js",["93","94","95","96","97"],"import React from 'react'\nimport {useState} from 'react'\n\nconst CreateDogForm = (props) => { \n    // const {} = props\n    let [display, setDisplay] = useState(false)\n    let [maleChecked, setMaleChecked] = useState(false)\n    let [femaleChecked, setFemaleChecked] = useState(false)\n    let [name, setName] = useState(\"\")\n    let [breed, setBreed] = useState(\"\")\n    let [age, setAge] = useState(\"\")\n    let [size, setSize] = useState(\"\")\n\n    let handleMaleChecked = () => {\n        setMaleChecked(true)\n    }\n\n    let handleFemaleChecked = () => {\n        setFemaleChecked(true)\n    }\n\n    let handleCreate = () => {\n        setDisplay(!display)\n    }\n\n\n    let handleSubmit = (e) => {\n        e.preventDefault()\n        let newPet = {\n            name: e.target[0].value,\n            breed: e.target[1].value,\n            age: e.target[2].value,\n            gender: e.target[3].value,\n            size: e.target[4].value,\n            seller_id: props.currentLogin.id,\n            // user_id: null,\n            // order_id: null\n        }\n\n        fetch(\"http://localhost:3000/pets\", {\n            method: \"POST\",\n            headers: {\n                \"Content-Type\": \"application/json\"\n            },\n            body: JSON.stringify(newPet)\n        })\n        .then(res => res.json())\n        .then(pet => {\n            {console.log(pet)}\n            // alert(`${pet.name} is added to your profile` )\n        })\n    }\n\n    return (\n        <div>\n            {console.log(props.currentLogin)}\n           {display\n        ?<div className={\"dog-form\"}>\n            <button onClick={() => handleCreate() }>Hide</button>\n            <form className={\"dog-form\"} onSubmit={(e) => handleSubmit(e)}>\n            <input \n                type=\"text\" name=\"name\"\n                value={name}\n                placeholder=\"Enter name\"\n                onChange={(e) => setName(e.target.value)}\n                />\n                <input \n                type=\"text\" name=\"breed\"\n                value={breed}\n                placeholder=\"Enter breed\"\n                onChange={(e) => setBreed(e.target.value)}\n                />\n                <input \n                type=\"text\" name=\"age\"\n                value={age}\n                placeholder=\"Enter age\"\n                onChange={(e) => setAge(e.target.value)}\n                />                \n                {/* <input \n                type=\"text\" name=\"gender\"\n                value=\"\"\n                placeholder=\"Enter your gender\"\n                /> */}\n                <select>\n                    <option value=\"Male\">Male</option>\n                    <option value=\"Female\">Female</option>\n                </select>\n                <input \n                type=\"text\" name=\"size\"\n                value={size}\n                placeholder=\"Enter size\"\n                onChange={(e) => setSize(e.target.value)}\n                />\n            <button>submit</button>\n        </form>\n        </div>\n        :<button onClick={() => handleCreate() }>Create</button>\n        }\n        </div>\n    )\n}\n\n\nexport default CreateDogForm\n","/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/Component/SavedDogsCard.js",["98"],"import React, { PureComponent } from 'react'\n// import UserHomePage from '../Component/UserHomePage'\n\nclass SavedDogsCard extends PureComponent {\n    \n    state = {\n        \n    }\n    render() {\n        let dog = this.props.dog\n        // console.log(dog)\n        // console.log(currentLogin)\n\n        return (\n            <div>\n                \n                <div className={\"dogPreview\"} >\n                <h1>{dog.name}</h1>\n                <img>{dog.image}</img>\n                <p>{dog.breed}</p>\n                <p>{dog.age} years old</p>\n                <p>{dog.gender}</p>\n                <p>{dog.size} </p>\n                <p>seller id: {dog.seller_id}</p>\n                <button>request addoption</button>\n                </div>\n            </div>\n        )\n    }\n}\n\nexport default SavedDogsCard\n\n\n// import { useState, useEffect } from 'react'\n// import Dog from './components/Dog'\n// const PetContainer = () => {\n    \n\n//         return (\n//             <div>\n//                 <Dog/>\n//             </div>\n//         )\n//     }\n\n\n// export default PetContainer","/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/Containers/RequestContainer.js",[],{"ruleId":"99","replacedBy":"100"},{"ruleId":"101","replacedBy":"102"},{"ruleId":"103","severity":1,"message":"104","line":3,"column":8,"nodeType":"105","messageId":"106","endLine":3,"endColumn":17},{"ruleId":"103","severity":1,"message":"107","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":14},{"ruleId":"103","severity":1,"message":"108","line":7,"column":8,"nodeType":"105","messageId":"106","endLine":7,"endColumn":20},{"ruleId":"109","severity":1,"message":"110","line":39,"column":35,"nodeType":"111","messageId":"112","endLine":39,"endColumn":37},{"ruleId":"109","severity":1,"message":"110","line":69,"column":35,"nodeType":"111","messageId":"112","endLine":69,"endColumn":37},{"ruleId":"109","severity":1,"message":"110","line":101,"column":35,"nodeType":"111","messageId":"112","endLine":101,"endColumn":37},{"ruleId":"109","severity":1,"message":"110","line":130,"column":35,"nodeType":"111","messageId":"112","endLine":130,"endColumn":37},{"ruleId":"103","severity":1,"message":"113","line":1,"column":10,"nodeType":"105","messageId":"106","endLine":1,"endColumn":18},{"ruleId":"103","severity":1,"message":"114","line":1,"column":20,"nodeType":"105","messageId":"106","endLine":1,"endColumn":29},{"ruleId":"103","severity":1,"message":"115","line":3,"column":8,"nodeType":"105","messageId":"106","endLine":3,"endColumn":20},{"ruleId":"103","severity":1,"message":"116","line":4,"column":8,"nodeType":"105","messageId":"106","endLine":4,"endColumn":21},{"ruleId":"103","severity":1,"message":"117","line":46,"column":13,"nodeType":"105","messageId":"106","endLine":46,"endColumn":20},{"ruleId":"118","severity":1,"message":"119","line":15,"column":17,"nodeType":"120","endLine":15,"endColumn":22},{"ruleId":"103","severity":1,"message":"121","line":2,"column":8,"nodeType":"105","messageId":"106","endLine":2,"endColumn":17},{"ruleId":"103","severity":1,"message":"108","line":3,"column":8,"nodeType":"105","messageId":"106","endLine":3,"endColumn":20},{"ruleId":"103","severity":1,"message":"122","line":7,"column":10,"nodeType":"105","messageId":"106","endLine":7,"endColumn":21},{"ruleId":"103","severity":1,"message":"123","line":8,"column":10,"nodeType":"105","messageId":"106","endLine":8,"endColumn":23},{"ruleId":"103","severity":1,"message":"124","line":14,"column":9,"nodeType":"105","messageId":"106","endLine":14,"endColumn":26},{"ruleId":"103","severity":1,"message":"125","line":18,"column":9,"nodeType":"105","messageId":"106","endLine":18,"endColumn":28},{"ruleId":"126","severity":1,"message":"127","line":49,"column":13,"nodeType":"128","messageId":"129","endLine":49,"endColumn":31},{"ruleId":"118","severity":1,"message":"119","line":19,"column":17,"nodeType":"120","endLine":19,"endColumn":22},"no-native-reassign",["130"],"no-negated-in-lhs",["131"],"no-unused-vars","'MainLogin' is defined but never used.","Identifier","unusedVar","'Signup' is defined but never used.","'BreederLogin' is defined but never used.","eqeqeq","Expected '!==' and instead saw '!='.","BinaryExpression","unexpected","'useState' is defined but never used.","'useEffect' is defined but never used.","'UserHomePage' is defined but never used.","'CreateDogForm' is defined but never used.","'breeder' is assigned a value but never used.","jsx-a11y/alt-text","img elements must have an alt prop, either with meaningful text, or an empty string for decorative images.","JSXOpeningElement","'UserLogin' is defined but never used.","'maleChecked' is assigned a value but never used.","'femaleChecked' is assigned a value but never used.","'handleMaleChecked' is assigned a value but never used.","'handleFemaleChecked' is assigned a value but never used.","no-lone-blocks","Nested block is redundant.","BlockStatement","redundantNestedBlock","no-global-assign","no-unsafe-negation"]