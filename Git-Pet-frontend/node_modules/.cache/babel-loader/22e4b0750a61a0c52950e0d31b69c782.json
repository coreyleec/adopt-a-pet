{"ast":null,"code":"var _jsxFileName = \"/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/App.js\",\n    _s = $RefreshSig$();\n\nimport './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport MainLogin from \"./others/Login\";\nimport Signup from \"./others/Signup\";\nimport UserHomePage from \"./Component/UserHomePage\";\nimport UserLogin from \"./Component/UserLogin\";\nimport BreederLogin from \"./others/BreederLogin\";\nimport BreederHomePage from \"./Component/BreederHomePage\";\nimport React, { useState, useEffect } from 'react';\nimport BreederProfile from \"./Containers/BreederProfile\";\nimport AllDogsContainer from \"./Containers/AllDogsContainer\";\nimport CreateDogForm from './Component/CreateDogForm';\nimport UpdateBreederProfileForm from './Component/UpdateBreederProfileForm'; // import AllDogsContainer from './Containers/AllDogsContainer';\n// userRequestDog = () => {\n//   debugger\n// }\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction App() {\n  _s();\n\n  let [dog, setDog] = useState([]);\n  let [user, setUser] = useState([]);\n  let [breeder, setBreeder] = useState([]);\n  let [order, serOrder] = useState([]);\n  let [currentLogin, setCurrentLogin] = useState({});\n\n  let handleCurrentLogin = loginObj => {\n    setCurrentLogin(loginObj);\n  };\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/pets\").then(res => res.json()).then(dogs => setDog(dogs));\n    fetch(\"http://localhost:3000/users\").then(res => res.json()).then(users => setUser(users));\n    fetch(\"http://localhost:3000/sellers\").then(res => res.json()).then(breeder => setBreeder(breeder));\n    fetch(\"http://localhost:3000/orders\").then(res => res.json()).then(order => setOrder(order));\n  }, []);\n\n  let saveDog = userSavedDog => {\n    console.log(userSavedDog);\n    fetch(`http://localhost:3000/pets/${userSavedDog.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user_id: currentLogin.id\n      })\n    }).then(resp => resp.json()).then(user => {\n      setCurrentLogin(user);\n    });\n  }; // let dogOrder = (pet) => {\n  //   fetch(`http://localhost:3000/order/}`, {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\"\n  //     },\n  //     body: JSON.stringify({\n  //       user_id: currentLogin.id,\n  //       seller_id: pet.seller.id,\n  //       pet_id: pet.id\n  //     })\n  //   })\n  //   .then(resp => resp.json())\n  //   .then(order => {\n  //       console.log(order)\n  //   })\n  // }\n\n\n  const updateBreederProfile = breederData => {\n    debugger;\n  }; // console.log(currentLogin)\n\n\n  return /*#__PURE__*/_jsxDEV(Router, {\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: /*#__PURE__*/_jsxDEV(Switch, {\n        children: [/*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/landing\",\n          component: props => /*#__PURE__*/_jsxDEV(UserLogin, { ...props,\n            handleCurrentLogin: handleCurrentLogin,\n            user: user\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/userhomepage\",\n          component: props => /*#__PURE__*/_jsxDEV(UserHomePage, { ...props,\n            dogOrder: dogOrder,\n            currentLogin: currentLogin // userRequestDog={this.userRequestDog} \n\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/breederhomepage\",\n          component: props => /*#__PURE__*/_jsxDEV(BreederHomePage, {\n            dogOrder: dogOrder,\n            currentLogin: currentLogin\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/breederprofile\",\n          component: props => /*#__PURE__*/_jsxDEV(BreederProfile, { ...props,\n            breeder: breeder\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/dogs\",\n          component: props => /*#__PURE__*/_jsxDEV(AllDogsContainer, {\n            saveDog: saveDog,\n            currentLogin: currentLogin,\n            ...props,\n            dogs: dog\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/updatebreederprofileform\",\n          component: props => breeder.map(breeder => /*#__PURE__*/_jsxDEV(UpdateBreederProfileForm, {\n            updateBreederProfile: updateBreederProfile,\n            breeder: breeder\n          }, breeder.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 36\n          }, this))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 12\n        }, this), /*#__PURE__*/_jsxDEV(Route, {\n          exact: true,\n          path: \"/add-dog\",\n          component: props => /*#__PURE__*/_jsxDEV(CreateDogForm, {\n            currentLogin: currentLogin,\n            ...props,\n            dogs: dog\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 7\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 5\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(App, \"UNJHTosUfb4SMNWCDxgKGItWpa0=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"sources":["/Users/coreycolligan/Development/project-4-v2/Git_Pet/Phase4-project-Git-Pet-Frontend/git-pet/src/App.js"],"names":["BrowserRouter","Router","Route","Switch","MainLogin","Signup","UserHomePage","UserLogin","BreederLogin","BreederHomePage","React","useState","useEffect","BreederProfile","AllDogsContainer","CreateDogForm","UpdateBreederProfileForm","App","dog","setDog","user","setUser","breeder","setBreeder","order","serOrder","currentLogin","setCurrentLogin","handleCurrentLogin","loginObj","fetch","then","res","json","dogs","users","setOrder","saveDog","userSavedDog","console","log","id","method","headers","body","JSON","stringify","user_id","resp","updateBreederProfile","breederData","props","dogOrder","map"],"mappings":"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","sourcesContent":["import './App.css';\nimport { BrowserRouter as Router, Route, Switch } from \"react-router-dom\";\nimport MainLogin from \"./others/Login\"\nimport Signup from \"./others/Signup\"\nimport UserHomePage from \"./Component/UserHomePage\"\nimport UserLogin from \"./Component/UserLogin\";\nimport BreederLogin from \"./others/BreederLogin\";\nimport BreederHomePage from \"./Component/BreederHomePage\"\nimport React, { useState, useEffect } from 'react';\nimport BreederProfile from \"./Containers/BreederProfile\"\nimport AllDogsContainer from \"./Containers/AllDogsContainer\"\nimport CreateDogForm from './Component/CreateDogForm';\nimport UpdateBreederProfileForm from './Component/UpdateBreederProfileForm'\n// import AllDogsContainer from './Containers/AllDogsContainer';\n\n// userRequestDog = () => {\n//   debugger\n// }\n\n\nfunction App() {\n  let [dog, setDog] = useState([])\n  let [user, setUser] = useState([])\n  let [breeder, setBreeder] = useState([])\n  let [order, serOrder] = useState([])  \n  let [currentLogin, setCurrentLogin] = useState({})\n\n\n  let handleCurrentLogin =(loginObj) => {\n    setCurrentLogin(loginObj)\n  }\n\n\n  useEffect(() => {\n    fetch(\"http://localhost:3000/pets\")\n    .then(res => res.json())\n    .then(dogs => setDog(dogs))\n    \n    fetch(\"http://localhost:3000/users\")\n    .then(res => res.json())\n    .then(users => setUser(users))\n\n    fetch(\"http://localhost:3000/sellers\")\n    .then(res => res.json())\n    .then(breeder => setBreeder(breeder))\n    \n    fetch(\"http://localhost:3000/orders\")\n    .then(res => res.json())\n    .then(order => setOrder(order))\n\n  }, [])\n\n  let saveDog = (userSavedDog) => {\n    console.log(userSavedDog)\n    fetch(`http://localhost:3000/pets/${userSavedDog.id}`, {\n      method: \"PATCH\",\n      headers: {\n        \"Content-Type\": \"application/json\"\n      },\n      body: JSON.stringify({\n        user_id: currentLogin.id, \n      })\n    })\n    .then(resp => resp.json())\n    .then(user => {\n      setCurrentLogin(user)\n    })\n  }\n\n\n  // let dogOrder = (pet) => {\n  //   fetch(`http://localhost:3000/order/}`, {\n  //     method: \"POST\",\n  //     headers: {\n  //       \"Content-Type\": \"application/json\"\n  //     },\n  //     body: JSON.stringify({\n  //       user_id: currentLogin.id,\n  //       seller_id: pet.seller.id,\n  //       pet_id: pet.id\n  //     })\n  //   })\n  //   .then(resp => resp.json())\n  //   .then(order => {\n  //       console.log(order)\n  //   })\n  // }\n  \n\n  \n\n  const updateBreederProfile = (breederData) => {\n    debugger\n  }\n\n  // console.log(currentLogin)\n  return (\n\n    <Router>\n    <div className=\"App\">\n      <Switch>\n\n          <Route exact path=\"/landing\" component={(props) => (\n            <UserLogin {...props} handleCurrentLogin={handleCurrentLogin} user={user}/>\n          )} />\n\n\n            <Route exact path=\"/userhomepage\" component={(props) => (\n            <UserHomePage {...props} dogOrder={dogOrder} currentLogin = {currentLogin}\n            // userRequestDog={this.userRequestDog} \n            />\n          )} /> \n          \n          <Route exact path=\"/breederhomepage\" component={(props) => (\n            <BreederHomePage dogOrder={dogOrder} currentLogin={currentLogin}\n            />\n          )} /> \n\n          <Route exact path=\"/breederprofile\" component={(props) => (\n            <BreederProfile  {...props} breeder={breeder}/>\n          )} />\n            <Route exact path=\"/dogs\" component={(props) => (\n            <AllDogsContainer saveDog={saveDog} currentLogin={currentLogin}  {...props} dogs={dog}/>\n          )} />\n          \n           <Route exact path=\"/updatebreederprofileform\" component={(props) => (\n            breeder.map(breeder => <UpdateBreederProfileForm updateBreederProfile={updateBreederProfile} breeder={breeder} key={breeder.id}/>)\n              )} /> \n\n              <Route exact path=\"/add-dog\" component={(props) => (\n                <CreateDogForm currentLogin={currentLogin}  {...props} dogs={dog}/>\n              )} />\n          \n            \n\n      </Switch>\n    </div>\n  </Router>\n  );\n}\n\nexport default App;\n"]},"metadata":{},"sourceType":"module"}