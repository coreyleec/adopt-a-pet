continue
Pet.create(pet_params)
exit
Seller.find(71)
Seller.first
User.first
User.firt
Pet.create(pet_params)
exit
Pet.create(pet_params)
continue
Pet.create(pet_params)
exit
Pet.create(pet_params)
continue
Pet.create(pet_params)
continue
Pet.create(pet_params)
pet_params
continue
params
pet_params
continue
contineu
pet_params
Pet.create(pet_params)
continue
Pet.create(pet_params)
continue
Seller.first
User.first
pet.save
pet
pet = Pet.new(pet_params)
Pet.new(pet_params)
        pet = Pet.crte(pet_params)
        pet = Pet.create(pet_params)
params
continue
        pet = Pet.create(pet_params)
pet_params
params
continue
coninue
params
continue
request
continue
params
continue
params
continue
params
continue
params[:id]
params
continue
params
parmas
continue
params
continue
params
continue
continie
continue
params
paramns
resources
continue
user.authenticate(params[:password])
user.authenticate("123")
user
continue
user.authenticate("123")
user.authenticate(params[:password])
user
User
continue
exit
user.authenticate(params[:password])
user.authenticate(params[:password])?
user = User.find_by(name: params[:name])
params
continue
contine
user.authenticate(params[:password])
user = User.find_by(name: params[:name])
params
continue
conintue
user.authenticate(params[:password])
user = User.find_by(name: params[:name])
params
continue
if( params[:name])
if params[:name]
if paras[:name]
params[:name] = nil
params.has_key?(:name) && params.has_key?(:phone)
params.has_key?(:name, :phone)
params.has_key?(:phone)
params.has_key?(:name)
params
continue
exit
user.authenticate(params[:password])
user
user = User.find_by(name: params[:name])
user
user.authenticate(params[:password])
authenticate
user.authenticate(params[:password])
params[:password]
continue
params
continue
params[:name]
params[]
params
continue
